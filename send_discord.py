import os
import time
import threading
import requests
from flask import Flask

# ========== C·∫•u h√¨nh ==========
TOKEN = os.getenv("DISCORD_TOKEN")  # Token t√†i kho·∫£n Discord
CHANNEL_ID = os.getenv("CHANNEL_ID")  # ID c·ªßa k√™nh Discord
FILE_PATH = "noidung.txt"  # File ch·ª©a n·ªôi dung
DELAY = 6  # Th·ªùi gian g·ª≠i tin nh·∫Øn l·∫°i m·ªói l·∫ßn (gi√¢y)

# ========== Header cho API Discord ==========
headers = {
    "Authorization": TOKEN,
    "Content-Type": "application/json",
    "User-Agent": "Mozilla/5.0"
}

# ========== Flask gi·ªØ tool lu√¥n ch·∫°y ==========
app = Flask(__name__)

@app.route("/")
def home():
    return "‚úÖ Bot ƒëang ch·∫°y"

# ========== H√†m ƒë·ªçc v√† ƒë·ªãnh d·∫°ng n·ªôi dung ==========
def format_file_content(path):
    try:
        with open(path, "r", encoding="utf-8") as f:
            lines = f.read().splitlines()
        return "\n".join([f"> # {line.strip()}" for line in lines if line.strip()])
    except FileNotFoundError:
        return "> # File noidung.txt kh√¥ng t·ªìn t·∫°i."

# ========== H√†m g·ª≠i tin nh·∫Øn v√†o Discord ==========
def send_loop():
    while True:
        content = format_file_content(FILE_PATH)
        if len(content) > 2000:
            print("‚ö†Ô∏è N·ªôi dung v∆∞·ª£t qu√° gi·ªõi h·∫°n 2000 k√Ω t·ª±.")
        else:
            res = requests.post(
                f"https://discord.com/api/v9/channels/{CHANNEL_ID}/messages",
                headers=headers,
                json={"content": content}
            )
            if res.status_code == 200:
                print("‚úÖ G·ª≠i th√†nh c√¥ng.")
            else:
                print(f"‚ùå L·ªói {res.status_code}: {res.text}")
        
        time.sleep(DELAY)

# ========== Kh·ªüi ch·∫°y bot v√† Flask server ==========
if __name__ == "__main__":
    if not TOKEN or not CHANNEL_ID:
        print("‚ö†Ô∏è Thi·∫øu bi·∫øn m√¥i tr∆∞·ªùng DISCORD_TOKEN ho·∫∑c CHANNEL_ID.")
    else:
        print("üöÄ Kh·ªüi ƒë·ªông bot v√† Flask server...")

        # Ch·∫°y bot trong m·ªôt lu·ªìng ri√™ng
        threading.Thread(target=send_loop).start()

        # Ch·∫°y Flask gi·ªØ server "s·ªëng"
        app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
